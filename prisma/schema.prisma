// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @default(autoincrement()) @id
  firstName String
  lastName String? 
  username String @unique
  email String @unique
  password String
  bio String?
  avatar String?
  followers User[] @relation("FollowRelation", references: [id])
  following User[] @relation("FollowRelation", references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  photos Photo[]
  likes Like[]
  comments Comment[]
  rooms Room[]
  messages Message[]
}

model Photo {
  id Int @default(autoincrement()) @id
  user User @relation(fields: [userId], references: [id])
  userId Int
  file String
  caption String?
  hashtags Hashtag[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt  
  likes Like[]
  comments Comment[]
}

model Hashtag {
  id Int @default(autoincrement()) @id
  hashtag String @unique
  photos Photo[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt  
}

model Like {
  id Int @default(autoincrement()) @id
  photo Photo @relation(fields: [photoId], references:[id])
  photoId Int
  user User @relation(fields: [userId], references: [id])
  userId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([photoId, userId])
}

model Comment {
  id Int @default(autoincrement()) @id
  photo Photo @relation(fields: [photoId], references:[id])
  photoId Int
  user User @relation(fields: [userId], references: [id])
  userId Int
  payload String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
}

model Room {
  id Int @default(autoincrement()) @id
  users User[]
  messages Message[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
}

model Message {
  id Int @default(autoincrement()) @id
  payload String
  user User @relation(fields: [userId], references:[id])
  userId Int
  room Room @relation(fields: [roomId], references:[id])
  roomId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
}